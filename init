#!/bin/bash

# move to custom directory
cd custom

# download my hud into the proper location;
# I use ahud, by Nokk.
function get_hud() {
    # check for hud already being downloaded;
    # remember that this function expects to be run from ./custom
    if [ ! -f ahud ]; then
        # clone the hud's files into custom
        git clone https://github.com/n0kk/ahud.git
        # since this function is run with ./custom as its working
        # directory, this does not destroy the tf2-configs git
        # configuration.
        find . -name "*.git*" -exec rm -rf {} \; 2>/dev/null
    fi
}

# download an fps config;
# I use mastercom's low preset.
function get_fps_config() {
    # get all release URIs from github
    # an array is used here to preserve line formatting
    uris=()
    for uri in $(curl -s https://api.github.com/repos/mastercomfig/mastercomfig/releases | grep browser_ | cut -d\" -f4); do
        uris+=("$uri")
    done
    # get the most recent version; this should be the first one returned
    # by the github api call. If the first version is non-numerical
    # (such as "dev"), then it will be ignored and the next tried.
    for uri in ${uris[*]}; do
        version="$(echo $uri | grep -E '[0-9]+' | head -n 1 | sed -r 's/.*\/([0-9.]+)\/.*/\1/')"
        [ ! -z "$version" ] && break
    done
    # get list of resources for current version; this could
    # be done at the same time as the version determination,
    # but since this script is not run on a regular basis
    # I prefer the seperation for readability.
    for uri in ${uris[*]}; do
        # this could check to see if the version has decremented and stop;
        # this script should run seldom enough that the short increase in
        # runtime is unimportant.
        if [ ! -z "$(echo $uri | grep "$version" | grep -e "disable-pyroland" -e "mastercomfig-low-preset" -e "no-soundscapes" -e "no-tutorial")" ]; then
            curl $uri -o "$(echo $uri | sed -r 's/.*\/(mastercomfig-.*\.vpk)/\1/')"
        fi
    done
}

# mastercomfig requires your class configs to exist under cfg/user/ instead of just cfg/;
# this function will copy the configs into the ./cfg/user directory
function mastercoms_fix() {
    cd ..
    mkdir -p ./cfg/user
    cp -r ./custom/my_scripts/cfg/global ./cfg/user/
    for character in "scout" "soldier" "pyro" "demoman" "heavyweapons" "engineer" "medic" "sniper" "spy"; do
        # necessary to copy class configs to this location for use with mastercom's config
        cp "custom/my_scripts/cfg/$character.cfg" "cfg/user/$character.cfg"
        # necessary to replace all calls to "global/<script>" with "user/global/<script>" due to the mastercoms-required location.
        sed -i 's/global\//user\/global\//g' "cfg/user/$character.cfg"
    done
}

function main() {
    # get_hud
    get_fps_config
    # mastercoms_fix
}
main
